<appDefinition>
   <id>colossus</id>
   <version></version>
   <name>Colossus</name>
   <packageDefinitionList/>
   <formDefinitionList/>
   <userviewDefinitionList/>
   <datalistDefinitionList/>
   <builderDefinitionList/>
   <pluginDefaultPropertiesList>
      <pluginDefaultProperties>
         <id>org.joget.plugin.enterprise.OfficeWorkingHourDeadline</id>
         <pluginName>Office Working Hour Deadline</pluginName>
         <pluginDescription>Calculate deadline based on office working hour.</pluginDescription>
         <pluginProperties>{&quot;holidays&quot;:[],&quot;weekends&quot;:&quot;1;7&quot;,&quot;workingHourFrom&quot;:&quot;0900&quot;,&quot;workingHourTo&quot;:&quot;1800&quot;}</pluginProperties>
      </pluginDefaultProperties>
   </pluginDefaultPropertiesList>
   <environmentVariableList>
      <environmentVariable>
         <id>generateImage</id>
         <appId>colossus</appId>
         <appVersion>1</appVersion>
         <value>import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import org.json.JSONArray;
import org.json.JSONObject;
import javax.imageio.ImageIO;
import org.apache.axis.encoding.Base64;
import java.net.URLDecoder;
 
//Here defines the signature image size
int width = 200;
int height = 80;
 
try {
    String jsonstr = URLDecoder.decode(json[0], &quot;UTF-8&quot;);
    JSONArray jarr = new JSONArray(jsonstr);
    BufferedImage offscreenImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
    Graphics2D g2 = offscreenImage.createGraphics();
    g2.setColor(Color.white);
    g2.fillRect(0,0,width,height);
    g2.setPaint(Color.black);
    g2.setStroke(new BasicStroke(2));
    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    for (int i = 0; i &lt; jarr.length(); i++) {
        JSONObject jobj = jarr.get(i);
        g2.drawLine(jobj.getInt(&quot;lx&quot;), jobj.getInt(&quot;ly&quot;), jobj.getInt(&quot;mx&quot;), jobj.getInt(&quot;my&quot;));
    }
 
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    ImageIO.write( offscreenImage, &quot;png&quot;, baos );
    baos.flush();
    byte[] imageInByte = baos.toByteArray();
    baos.close();
    String base64bytes = Base64.encode(imageInByte);
    String src = &quot;data:image/png;base64,&quot; + base64bytes;
 
    return src;
} catch (Exception e) { } </value>
         <remarks></remarks>
      </environmentVariable>
      <environmentVariable>
         <id>templateEmail</id>
         <appId>colossus</appId>
         <appVersion>1</appVersion>
         <value>Estimado(a) Sr(a).
    
    nome_texto
    
    Informamos que procedemos à validação final da documentação que nos enviou.
    
    Estamos, naturalmente, ao seu inteiro dispor para qualquer esclarecimento adicional que tenha por conveniente.
    
    / PEDIDO DE CONTACTO /
    
    Em qualquer momento, pode solicitar o nosso contacto.
    
    Envie um SMS para o Tel. N.º 927 820 110 com indicação do número do processo: workflow_texto
    
    O envio do SMS está sujeito ao tarifário que contratou com o seu operador.
    
    No espaço máximo de 1 hora receberá um contacto dos nossos serviços.
    
    Com os melhores cumprimentos,</value>
         <remarks></remarks>
      </environmentVariable>
   </environmentVariableList>
   <messageList/>
   <resourceList/>
   <license>kCmlZW/AvlAoO5J5p0UbnU0j93grj5S3mhHC5cQtD6Hj7hnV/F5O6VuVgETtTG6I</license>
</appDefinition>